<?php
/**
 * @author Martin Gamboa Vazquez
 * @version 1.0.0
 * @created 2022-05-14
 * @final En proceso
 *
 */
namespace gamboamartin\importador\controllers;


use gamboamartin\errores\errores;
use gamboamartin\importador\html\imp_database_html;
use gamboamartin\importador\html\imp_origen_html;
use gamboamartin\importador\models\imp_origen;
use gamboamartin\system\_ctl_parent_sin_codigo;
use gamboamartin\system\links_menu;
use gamboamartin\template_1\html;
use PDO;
use stdClass;


class controlador_imp_origen extends _ctl_parent_sin_codigo {

    public stdClass|array $imp_origen = array();
    private imp_origen_html $html_local;

    public string $link_imp_destino_alta_bd = '';


    public function __construct(PDO $link, html $html = new html(), stdClass $paths_conf = new stdClass()){
        $modelo = new imp_origen(link: $link);

        $html_ = new imp_origen_html(html: $html);
        $this->html_local = $html_;
        $obj_link = new links_menu(link: $link, registro_id: $this->registro_id);

        $datatables = new stdClass();
        $datatables->columns = array();
        $datatables->columns['imp_origen_id']['titulo'] = 'Id';
        $datatables->columns['imp_origen_descripcion']['titulo'] = 'Origen';
        $datatables->columns['imp_database_descripcion']['titulo'] = 'Database';
        $datatables->columns['imp_server_descripcion']['titulo'] = 'Server';
        $datatables->columns['adm_seccion_descripcion']['titulo'] = 'Seccion';


        $datatables->filtro = array();
        $datatables->filtro[] = 'imp_origen.id';
        $datatables->filtro[] = 'imp_origen.descripcion';
        $datatables->filtro[] = 'imp_database.descripcion';
        $datatables->filtro[] = 'imp_server.descripcion';
        $datatables->filtro[] = 'adm_seccion.descripcion';

        parent::__construct(html: $html_, link: $link, modelo: $modelo, obj_link: $obj_link, datatables: $datatables,
            paths_conf: $paths_conf);

        $this->titulo_lista = 'Databases';

        if(isset($this->registro_id) && $this->registro_id > 0){
            $imp_origen = $modelo->registro(registro_id: $this->registro_id);
            if(errores::$error){
                $error = $this->errores->error(mensaje: 'Error al obtener imp_origen',data:  $imp_origen);
                print_r($error);
                exit;
            }
            $this->imp_origen = $imp_origen;
        }

        $link_imp_destino_alta_bd = $this->obj_link->link_alta_bd(link: $link, seccion: 'imp_destino');
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al obtener link',data:  $link_imp_destino_alta_bd);
            print_r($error);
            exit;
        }
        $this->link_imp_destino_alta_bd = $link_imp_destino_alta_bd;


    }

    public function alta(bool $header, bool $ws = false): array|string
    {
        $r_alta =  parent::alta($header, $ws); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar template',data:  $r_alta, header: $header,ws: $ws);
        }

        $keys_selects = $this->key_select(cols:6, con_registros: true,filtro:  array(), key: 'imp_database_id',
            keys_selects: array(), id_selected: -1, label: 'Database');
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al maquetar key_selects',data:  $keys_selects, header: $header,ws:  $ws);
        }

        $keys_selects = $this->key_select(cols:6, con_registros: true,filtro:  array(), key: 'adm_seccion_id',
            keys_selects: $keys_selects, id_selected: -1, label: 'Seccion');
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al maquetar key_selects',data:  $keys_selects, header: $header,ws:  $ws);
        }



        $inputs = $this->inputs(keys_selects: $keys_selects);
        if(errores::$error){
            return $this->retorno_error(
                mensaje: 'Error al obtener inputs',data:  $inputs, header: $header,ws:  $ws);
        }


        return $r_alta;

    }

    /**
     * Integra los campos para vistas generales
     * @param array $inputs Inputs precargados
     * @return array
     */
    final protected function campos_view(array $inputs = array()): array
    {
        $keys = new stdClass();
        $keys->inputs = array('codigo','descripcion');
        $keys->selects = array();

        $init_data = array();
        $init_data['imp_database'] = "gamboamartin\\importador";
        $init_data['adm_seccion'] = "gamboamartin\\administrador";
        $campos_view = $this->campos_view_base(init_data: $init_data,keys:  $keys);

        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al inicializar campo view',data:  $campos_view);
        }

        return $campos_view;
    }

    public function destinos(bool $header = true, bool $ws = false): array|stdClass|string
    {

        $data_view = new stdClass();
        $data_view->names = array('Id','Destino', 'DB Destino','IP Destino','Seccion','Acciones');
        $data_view->keys_data = array('imp_destino_id','imp_destino_descripcion','imp_database_descripcion','imp_server_ip',
            'adm_seccion_descripcion');
        $data_view->key_actions = 'acciones';
        $data_view->namespace_model = 'gamboamartin\\importador\\models';
        $data_view->name_model_children = 'imp_destino';


        $contenido_table = $this->contenido_children(data_view: $data_view, next_accion: __FUNCTION__, not_actions: $this->not_actions);
        if(errores::$error){
            return $this->retorno_error(
                mensaje: 'Error al obtener tbody',data:  $contenido_table, header: $header,ws:  $ws);
        }


        return $contenido_table;

    }

    protected function inputs_children(stdClass $registro): array|stdClass{
        $select_imp_origen_id = (new imp_origen_html(html: $this->html_base))->select_imp_origen_id(
            cols:12,con_registros: true,id_selected:  $registro->imp_database_id,link:  $this->link, disabled: true);

        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al obtener select_imp_origen_id',data:  $select_imp_origen_id);
        }

        $select_imp_database_id = (new imp_database_html(html: $this->html_base))->select_imp_database_id(
            cols:12,con_registros: true,id_selected:  -1,link:  $this->link, disabled: false);

        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al obtener select_imp_database_id',data:  $select_imp_database_id);
        }


        $this->inputs = new stdClass();
        $this->inputs->imp_origen_id = $select_imp_origen_id;
        $this->inputs->imp_database_id = $select_imp_database_id;

        return $this->inputs;
    }



    protected function key_selects_txt(array $keys_selects): array
    {
        $keys_selects = (new \base\controller\init())->key_select_txt(cols: 6,key: 'codigo', keys_selects:$keys_selects, place_holder: 'Cod');
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al maquetar key_selects',data:  $keys_selects);
        }

        $keys_selects = (new \base\controller\init())->key_select_txt(cols: 6,key: 'descripcion', keys_selects:$keys_selects, place_holder: 'Origen');
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al maquetar key_selects',data:  $keys_selects);
        }



        return $keys_selects;
    }

    public function modifica(bool $header, bool $ws = false, array $keys_selects = array()): array|stdClass
    {
        $this->not_actions[] = __FUNCTION__;
        $r_modifica = $this->init_modifica(); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(
                mensaje: 'Error al generar salida de template',data:  $r_modifica,header: $header,ws: $ws);
        }


        $keys_selects = $this->key_select(cols:6, con_registros: true,filtro:  array(), key: 'imp_database_id',
            keys_selects: array(), id_selected: $this->registro['imp_database_id'], label: 'Database');
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al maquetar key_selects',data:  $keys_selects, header: $header,ws:  $ws);
        }

        $keys_selects = $this->key_select(cols:6, con_registros: true,filtro:  array(), key: 'adm_seccion_id',
            keys_selects: $keys_selects, id_selected: $this->registro['adm_seccion_id'], label: 'Seccion');
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al maquetar key_selects',data:  $keys_selects, header: $header,ws:  $ws);
        }


        $base = $this->base_upd(keys_selects: $keys_selects, params: array(),params_ajustados: array());
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al integrar base',data:  $base, header: $header,ws:  $ws);
        }


        return $r_modifica;
    }



}
